{
    "get_users_list": {
        "id": "get_users_list",
        "type": "method",
        "description": "Get user list",
        "params": {
            "start_time": {
                "type": [
                    "string",
                    "null"
                ],
                "pattern": "^(19|20)\\d\\d-((0[1-9]|1[012])-(0[1-9]|[12]\\d)|(0[13-9]|1[012])-30|(0[13578]|1[02])-31)T([0-1]\\d|2[0-3])(:[0-5]\\d){2}.\\d{3}(Z|(\\+|-)\\d{1,2}\\.?\\d?)$"
            },
            "end_time": {
                "type": [
                    "string",
                    "null"
                ],
                "pattern": "^(19|20)\\d\\d-((0[1-9]|1[012])-(0[1-9]|[12]\\d)|(0[13-9]|1[012])-30|(0[13578]|1[02])-31)T([0-1]\\d|2[0-3])(:[0-5]\\d){2}.\\d{3}(Z|(\\+|-)\\d{1,2}\\.?\\d?)$"
            }
        },
        "result": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "vacation": {
                        "type": "object",
                        "properties": {
                            "from": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "pattern": "^(19|20)\\d\\d-((0[1-9]|1[012])-(0[1-9]|[12]\\d)|(0[13-9]|1[012])-30|(0[13578]|1[02])-31)T([0-1]\\d|2[0-3])(:[0-5]\\d){2}.\\d{3}(Z|(\\+|-)\\d{1,2}\\.?\\d?)$"
                            },
                            "to": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "pattern": "^(19|20)\\d\\d-((0[1-9]|1[012])-(0[1-9]|[12]\\d)|(0[13-9]|1[012])-30|(0[13578]|1[02])-31)T([0-1]\\d|2[0-3])(:[0-5]\\d){2}.\\d{3}(Z|(\\+|-)\\d{1,2}\\.?\\d?)$"
                            }
                        }
                    }
                }
            }
        }
    },
    "types": {
        "id": "types",
        "type": "definitions",
        "description": "\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0440\u0430\u0431\u043e\u0442\u044b utf-8",
        "date": {
            "type": [
                "string",
                "null"
            ],
            "pattern": "^(19|20)\\d\\d-((0[1-9]|1[012])-(0[1-9]|[12]\\d)|(0[13-9]|1[012])-30|(0[13578]|1[02])-31)T([0-1]\\d|2[0-3])(:[0-5]\\d){2}.\\d{3}(Z|(\\+|-)\\d{1,2}\\.?\\d?)$"
        },
        "date_range": {
            "type": "object",
            "properties": {
                "from": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "pattern": "^(19|20)\\d\\d-((0[1-9]|1[012])-(0[1-9]|[12]\\d)|(0[13-9]|1[012])-30|(0[13578]|1[02])-31)T([0-1]\\d|2[0-3])(:[0-5]\\d){2}.\\d{3}(Z|(\\+|-)\\d{1,2}\\.?\\d?)$"
                },
                "to": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "pattern": "^(19|20)\\d\\d-((0[1-9]|1[012])-(0[1-9]|[12]\\d)|(0[13-9]|1[012])-30|(0[13578]|1[02])-31)T([0-1]\\d|2[0-3])(:[0-5]\\d){2}.\\d{3}(Z|(\\+|-)\\d{1,2}\\.?\\d?)$"
                }
            }
        }
    },
    "users_list": {
        "id": "users_list",
        "type": "definitions",
        "description": "Users list",
        "struct": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "vacation": {
                        "type": "object",
                        "properties": {
                            "from": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "pattern": "^(19|20)\\d\\d-((0[1-9]|1[012])-(0[1-9]|[12]\\d)|(0[13-9]|1[012])-30|(0[13578]|1[02])-31)T([0-1]\\d|2[0-3])(:[0-5]\\d){2}.\\d{3}(Z|(\\+|-)\\d{1,2}\\.?\\d?)$"
                            },
                            "to": {
                                "type": [
                                    "string",
                                    "null"
                                ],
                                "pattern": "^(19|20)\\d\\d-((0[1-9]|1[012])-(0[1-9]|[12]\\d)|(0[13-9]|1[012])-30|(0[13578]|1[02])-31)T([0-1]\\d|2[0-3])(:[0-5]\\d){2}.\\d{3}(Z|(\\+|-)\\d{1,2}\\.?\\d?)$"
                            }
                        }
                    }
                }
            }
        }
    },
    "user": {
        "id": "user",
        "type": "definitions",
        "description": "User",
        "struct": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "vacation": {
                    "type": "object",
                    "properties": {
                        "from": {
                            "type": [
                                "string",
                                "null"
                            ],
                            "pattern": "^(19|20)\\d\\d-((0[1-9]|1[012])-(0[1-9]|[12]\\d)|(0[13-9]|1[012])-30|(0[13578]|1[02])-31)T([0-1]\\d|2[0-3])(:[0-5]\\d){2}.\\d{3}(Z|(\\+|-)\\d{1,2}\\.?\\d?)$"
                        },
                        "to": {
                            "type": [
                                "string",
                                "null"
                            ],
                            "pattern": "^(19|20)\\d\\d-((0[1-9]|1[012])-(0[1-9]|[12]\\d)|(0[13-9]|1[012])-30|(0[13578]|1[02])-31)T([0-1]\\d|2[0-3])(:[0-5]\\d){2}.\\d{3}(Z|(\\+|-)\\d{1,2}\\.?\\d?)$"
                        }
                    }
                }
            }
        }
    }
}
